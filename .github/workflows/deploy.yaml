name: Deploy to EC2 🚀

on:
  push:
    branches:
      - "dev" # This triggers the workflow on push to any branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch ✅
        uses: actions/checkout@v2

      - name: Set up SSH key and whitelist EC2 IP address 🐻‍❄️
        run: |
          which ssh-agent || (sudo apk update && sudo apk add openssh-client)
          which rsync || (sudo apk update && sudo apk add rsync)
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          touch ~/.ssh/private.key
          touch ~/.ssh/known_hosts
          chmod 600 ~/.ssh/private.key
          echo -e "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' > ~/.ssh/private.key
          # Append keyscan output into known hosts
          ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Create .env file dynamically 🧨
        env:
          ENV: ${{ secrets.ENV }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "ENV=${ENV}" >> env
          echo "EC2_USERNAME=${EC2_USERNAME}" >> env
          echo "OPENAI_API_KEY=${OPENAI_API_KEY}" >> env

      - name: Copy files to remote server 🚙
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          scp -r * $EC2_USERNAME@$EC2_HOST:/home/ubuntu/

      - name: Run Bash Script To Delpoy App 🚀
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "chmod +x ./deploy.sh && ./deploy.sh"

      - name: Clean up SSH key 🚀
        if: always()
        run: rm -f ~/.ssh/id_rsa
